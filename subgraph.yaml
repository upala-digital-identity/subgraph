specVersion: 0.0.2
description: Testing subgraph for Upala
repository: https://github.com/upala-digital-identity/subgraph
schema:
  file: ./schema.graphql
# todo add dai contract
dataSources:
  - kind: ethereum
    name: Upala
    network: rinkeby
    source:
      address: "0x59FcEd8395A4d97F0b9F9e1Fd43C4B0C9ff71e53"
      abi: Upala
      startBlock: 10541514
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - UpalaID
        - Delegate
        - PoolFactory
        - Pool
      abis:
        - name: Upala
          file: ./abis/Upala.json
      eventHandlers:
        # Identity management
        - event: NewIdentity(address,address)
          handler: handleNewIdentity
        - event: NewCandidateDelegate(address,address)
          handler: handleNewCandidateDelegate
        - event: NewDelegate(address,address)
          handler: handleNewDelegate
        - event: DelegateDeleted(address,address)
          handler: handleDelegateDeleted
        - event: NewIdentityOwner(address,address,address)
          handler: handleNewIdentityOwner
        - event: Liquidated(address)
          handler: handleLiquidated
        # Pools
        - event: NewPoolFactoryStatus(address,bool)
          handler: handleNewPoolFactoryStatus
        - event: NewPool(address,address,address)
          handler: handleNewPool
        # Upala settings
        - event: NewAttackWindow(uint256)
          handler: handleNewAttackWindow
        - event: NewExecutionWindow(uint256)
          handler: handleNewExecutionWindow
        - event: NewLiquidationFeePercent(uint8)
          handler: handleNewLiquidationFeePercent
        - event: NewTreasury(address)
          handler: handleNewTreasury
        - event: OwnershipTransferred(indexed address,indexed address)
          handler: handleOwnershipTransferred
        # DApps
        - event: NewDAppStatus(address,bool)
          handler: handleNewDAppStatus
      file: ./src/mapping.ts

  # Pool balances
  - kind: ethereum
    name: ERC20
    network: rinkeby
    source:
      address: "0xbC0dFaA78fe7bc8248b9F857292f680a1630b0C5"
      abi: ERC20
      startBlock: 10541514
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - Pool
      abis:
        - name: ERC20
          file: ./abis/ERC20.json
      eventHandlers:
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransfer
      file: ./src/mapping.ts

templates:
  # Pools
  - name: BundledScoresPool
    kind: ethereum/contract
    network: rinkeby
    source:
      abi: BundledScoresPool
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      file: ./src/bundledScoresPool.ts
      entities:
        - BundledScoresPool
        - ScoreBundle
      abis:
        - name: BundledScoresPool
          file: ./abis/BundledScoresPool.json
      eventHandlers:
        - event: MetaDataUpdate(string)
          handler: handleMetaDataUpdate
        - event: NewScoreBundleId(bytes32,uint256)
          handler: handleNewScoreBundleId
        - event: ScoreBundleIdDeleted(bytes32)
          handler: handleScoreBundleIdDeleted
        - event: NewBaseScore(uint256)
          handler: handleNewBaseScore
        - event: OwnershipTransferred(indexed address,indexed address)
          handler: handleOwnershipTransferred
  
  # DApps
  - name: DappContract
    kind: ethereum/contract
    network: rinkeby
    source:
      abi: usingUpala
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      file: ./src/dappContract.ts
      entities:
        - DappContract
      abis:
        - name: usingUpala
          file: ./abis/usingUpala.json
      eventHandlers:
        - event: NewProviderStatus(address,bool)
          handler: handleNewProviderStatus
