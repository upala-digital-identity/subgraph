// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Exploded extends ethereum.Event {
  get params(): Exploded__Params {
    return new Exploded__Params(this);
  }
}

export class Exploded__Params {
  _event: Exploded;

  constructor(event: Exploded) {
    this._event = event;
  }

  get upalaId(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class NewAttackWindow extends ethereum.Event {
  get params(): NewAttackWindow__Params {
    return new NewAttackWindow__Params(this);
  }
}

export class NewAttackWindow__Params {
  _event: NewAttackWindow;

  constructor(event: NewAttackWindow) {
    this._event = event;
  }

  get newWindow(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class NewDAppStatus extends ethereum.Event {
  get params(): NewDAppStatus__Params {
    return new NewDAppStatus__Params(this);
  }
}

export class NewDAppStatus__Params {
  _event: NewDAppStatus;

  constructor(event: NewDAppStatus) {
    this._event = event;
  }

  get dappAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get isRegistered(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class NewDelegateStatus extends ethereum.Event {
  get params(): NewDelegateStatus__Params {
    return new NewDelegateStatus__Params(this);
  }
}

export class NewDelegateStatus__Params {
  _event: NewDelegateStatus;

  constructor(event: NewDelegateStatus) {
    this._event = event;
  }

  get upalaId(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get delegate(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get isApproved(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }
}

export class NewExecutionWindow extends ethereum.Event {
  get params(): NewExecutionWindow__Params {
    return new NewExecutionWindow__Params(this);
  }
}

export class NewExecutionWindow__Params {
  _event: NewExecutionWindow;

  constructor(event: NewExecutionWindow) {
    this._event = event;
  }

  get newWindow(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class NewExplosionFeePercent extends ethereum.Event {
  get params(): NewExplosionFeePercent__Params {
    return new NewExplosionFeePercent__Params(this);
  }
}

export class NewExplosionFeePercent__Params {
  _event: NewExplosionFeePercent;

  constructor(event: NewExplosionFeePercent) {
    this._event = event;
  }

  get newFee(): i32 {
    return this._event.parameters[0].value.toI32();
  }
}

export class NewIdentity extends ethereum.Event {
  get params(): NewIdentity__Params {
    return new NewIdentity__Params(this);
  }
}

export class NewIdentity__Params {
  _event: NewIdentity;

  constructor(event: NewIdentity) {
    this._event = event;
  }

  get upalaId(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get owner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class NewIdentityOwner extends ethereum.Event {
  get params(): NewIdentityOwner__Params {
    return new NewIdentityOwner__Params(this);
  }
}

export class NewIdentityOwner__Params {
  _event: NewIdentityOwner;

  constructor(event: NewIdentityOwner) {
    this._event = event;
  }

  get upalaId(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get owner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class NewPool extends ethereum.Event {
  get params(): NewPool__Params {
    return new NewPool__Params(this);
  }
}

export class NewPool__Params {
  _event: NewPool;

  constructor(event: NewPool) {
    this._event = event;
  }

  get poolAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get factory(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class NewPoolFactoryStatus extends ethereum.Event {
  get params(): NewPoolFactoryStatus__Params {
    return new NewPoolFactoryStatus__Params(this);
  }
}

export class NewPoolFactoryStatus__Params {
  _event: NewPoolFactoryStatus;

  constructor(event: NewPoolFactoryStatus) {
    this._event = event;
  }

  get poolFactory(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get isApproved(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class NewTreasury extends ethereum.Event {
  get params(): NewTreasury__Params {
    return new NewTreasury__Params(this);
  }
}

export class NewTreasury__Params {
  _event: NewTreasury;

  constructor(event: NewTreasury) {
    this._event = event;
  }

  get newTreasury(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Upala extends ethereum.SmartContract {
  static bind(address: Address): Upala {
    return new Upala("Upala", address);
  }

  approvedPoolFactories(param0: Address): boolean {
    let result = super.call(
      "approvedPoolFactories",
      "approvedPoolFactories(address):(bool)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBoolean();
  }

  try_approvedPoolFactories(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "approvedPoolFactories",
      "approvedPoolFactories(address):(bool)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  attackWindow(): BigInt {
    let result = super.call("attackWindow", "attackWindow():(uint256)", []);

    return result[0].toBigInt();
  }

  try_attackWindow(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("attackWindow", "attackWindow():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  executionWindow(): BigInt {
    let result = super.call(
      "executionWindow",
      "executionWindow():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_executionWindow(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "executionWindow",
      "executionWindow():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  explode(identity: Address): boolean {
    let result = super.call("explode", "explode(address):(bool)", [
      ethereum.Value.fromAddress(identity)
    ]);

    return result[0].toBoolean();
  }

  try_explode(identity: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("explode", "explode(address):(bool)", [
      ethereum.Value.fromAddress(identity)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  explosionFeePercent(): i32 {
    let result = super.call(
      "explosionFeePercent",
      "explosionFeePercent():(uint8)",
      []
    );

    return result[0].toI32();
  }

  try_explosionFeePercent(): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "explosionFeePercent",
      "explosionFeePercent():(uint8)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  isOwnerOrDelegate(ownerOrDelegate: Address, identity: Address): boolean {
    let result = super.call(
      "isOwnerOrDelegate",
      "isOwnerOrDelegate(address,address):(bool)",
      [
        ethereum.Value.fromAddress(ownerOrDelegate),
        ethereum.Value.fromAddress(identity)
      ]
    );

    return result[0].toBoolean();
  }

  try_isOwnerOrDelegate(
    ownerOrDelegate: Address,
    identity: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isOwnerOrDelegate",
      "isOwnerOrDelegate(address,address):(bool)",
      [
        ethereum.Value.fromAddress(ownerOrDelegate),
        ethereum.Value.fromAddress(identity)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  myId(): Address {
    let result = super.call("myId", "myId():(address)", []);

    return result[0].toAddress();
  }

  try_myId(): ethereum.CallResult<Address> {
    let result = super.tryCall("myId", "myId():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  myIdOwner(): Address {
    let result = super.call("myIdOwner", "myIdOwner():(address)", []);

    return result[0].toAddress();
  }

  try_myIdOwner(): ethereum.CallResult<Address> {
    let result = super.tryCall("myIdOwner", "myIdOwner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  newIdentity(newIdentityOwner: Address): Address {
    let result = super.call("newIdentity", "newIdentity(address):(address)", [
      ethereum.Value.fromAddress(newIdentityOwner)
    ]);

    return result[0].toAddress();
  }

  try_newIdentity(newIdentityOwner: Address): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "newIdentity",
      "newIdentity(address):(address)",
      [ethereum.Value.fromAddress(newIdentityOwner)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  poolParent(param0: Address): Address {
    let result = super.call("poolParent", "poolParent(address):(address)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toAddress();
  }

  try_poolParent(param0: Address): ethereum.CallResult<Address> {
    let result = super.tryCall("poolParent", "poolParent(address):(address)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  registerPool(newPool: Address): boolean {
    let result = super.call("registerPool", "registerPool(address):(bool)", [
      ethereum.Value.fromAddress(newPool)
    ]);

    return result[0].toBoolean();
  }

  try_registerPool(newPool: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("registerPool", "registerPool(address):(bool)", [
      ethereum.Value.fromAddress(newPool)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  registeredDapps(param0: Address): boolean {
    let result = super.call(
      "registeredDapps",
      "registeredDapps(address):(bool)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBoolean();
  }

  try_registeredDapps(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "registeredDapps",
      "registeredDapps(address):(bool)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  treasury(): Address {
    let result = super.call("treasury", "treasury():(address)", []);

    return result[0].toAddress();
  }

  try_treasury(): ethereum.CallResult<Address> {
    let result = super.tryCall("treasury", "treasury():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ApproveDelegateCall extends ethereum.Call {
  get inputs(): ApproveDelegateCall__Inputs {
    return new ApproveDelegateCall__Inputs(this);
  }

  get outputs(): ApproveDelegateCall__Outputs {
    return new ApproveDelegateCall__Outputs(this);
  }
}

export class ApproveDelegateCall__Inputs {
  _call: ApproveDelegateCall;

  constructor(call: ApproveDelegateCall) {
    this._call = call;
  }

  get delegate(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ApproveDelegateCall__Outputs {
  _call: ApproveDelegateCall;

  constructor(call: ApproveDelegateCall) {
    this._call = call;
  }
}

export class ApprovePoolFactoryCall extends ethereum.Call {
  get inputs(): ApprovePoolFactoryCall__Inputs {
    return new ApprovePoolFactoryCall__Inputs(this);
  }

  get outputs(): ApprovePoolFactoryCall__Outputs {
    return new ApprovePoolFactoryCall__Outputs(this);
  }
}

export class ApprovePoolFactoryCall__Inputs {
  _call: ApprovePoolFactoryCall;

  constructor(call: ApprovePoolFactoryCall) {
    this._call = call;
  }

  get poolFactory(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get isApproved(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class ApprovePoolFactoryCall__Outputs {
  _call: ApprovePoolFactoryCall;

  constructor(call: ApprovePoolFactoryCall) {
    this._call = call;
  }
}

export class ExplodeCall extends ethereum.Call {
  get inputs(): ExplodeCall__Inputs {
    return new ExplodeCall__Inputs(this);
  }

  get outputs(): ExplodeCall__Outputs {
    return new ExplodeCall__Outputs(this);
  }
}

export class ExplodeCall__Inputs {
  _call: ExplodeCall;

  constructor(call: ExplodeCall) {
    this._call = call;
  }

  get identity(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ExplodeCall__Outputs {
  _call: ExplodeCall;

  constructor(call: ExplodeCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class NewIdentityCall extends ethereum.Call {
  get inputs(): NewIdentityCall__Inputs {
    return new NewIdentityCall__Inputs(this);
  }

  get outputs(): NewIdentityCall__Outputs {
    return new NewIdentityCall__Outputs(this);
  }
}

export class NewIdentityCall__Inputs {
  _call: NewIdentityCall;

  constructor(call: NewIdentityCall) {
    this._call = call;
  }

  get newIdentityOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class NewIdentityCall__Outputs {
  _call: NewIdentityCall;

  constructor(call: NewIdentityCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class RegisterDAppCall extends ethereum.Call {
  get inputs(): RegisterDAppCall__Inputs {
    return new RegisterDAppCall__Inputs(this);
  }

  get outputs(): RegisterDAppCall__Outputs {
    return new RegisterDAppCall__Outputs(this);
  }
}

export class RegisterDAppCall__Inputs {
  _call: RegisterDAppCall;

  constructor(call: RegisterDAppCall) {
    this._call = call;
  }
}

export class RegisterDAppCall__Outputs {
  _call: RegisterDAppCall;

  constructor(call: RegisterDAppCall) {
    this._call = call;
  }
}

export class RegisterPoolCall extends ethereum.Call {
  get inputs(): RegisterPoolCall__Inputs {
    return new RegisterPoolCall__Inputs(this);
  }

  get outputs(): RegisterPoolCall__Outputs {
    return new RegisterPoolCall__Outputs(this);
  }
}

export class RegisterPoolCall__Inputs {
  _call: RegisterPoolCall;

  constructor(call: RegisterPoolCall) {
    this._call = call;
  }

  get newPool(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RegisterPoolCall__Outputs {
  _call: RegisterPoolCall;

  constructor(call: RegisterPoolCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class RemoveDelegateCall extends ethereum.Call {
  get inputs(): RemoveDelegateCall__Inputs {
    return new RemoveDelegateCall__Inputs(this);
  }

  get outputs(): RemoveDelegateCall__Outputs {
    return new RemoveDelegateCall__Outputs(this);
  }
}

export class RemoveDelegateCall__Inputs {
  _call: RemoveDelegateCall;

  constructor(call: RemoveDelegateCall) {
    this._call = call;
  }

  get delegate(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RemoveDelegateCall__Outputs {
  _call: RemoveDelegateCall;

  constructor(call: RemoveDelegateCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetAttackWindowCall extends ethereum.Call {
  get inputs(): SetAttackWindowCall__Inputs {
    return new SetAttackWindowCall__Inputs(this);
  }

  get outputs(): SetAttackWindowCall__Outputs {
    return new SetAttackWindowCall__Outputs(this);
  }
}

export class SetAttackWindowCall__Inputs {
  _call: SetAttackWindowCall;

  constructor(call: SetAttackWindowCall) {
    this._call = call;
  }

  get newWindow(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetAttackWindowCall__Outputs {
  _call: SetAttackWindowCall;

  constructor(call: SetAttackWindowCall) {
    this._call = call;
  }
}

export class SetExecutionWindowCall extends ethereum.Call {
  get inputs(): SetExecutionWindowCall__Inputs {
    return new SetExecutionWindowCall__Inputs(this);
  }

  get outputs(): SetExecutionWindowCall__Outputs {
    return new SetExecutionWindowCall__Outputs(this);
  }
}

export class SetExecutionWindowCall__Inputs {
  _call: SetExecutionWindowCall;

  constructor(call: SetExecutionWindowCall) {
    this._call = call;
  }

  get newWindow(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetExecutionWindowCall__Outputs {
  _call: SetExecutionWindowCall;

  constructor(call: SetExecutionWindowCall) {
    this._call = call;
  }
}

export class SetExplosionFeePercentCall extends ethereum.Call {
  get inputs(): SetExplosionFeePercentCall__Inputs {
    return new SetExplosionFeePercentCall__Inputs(this);
  }

  get outputs(): SetExplosionFeePercentCall__Outputs {
    return new SetExplosionFeePercentCall__Outputs(this);
  }
}

export class SetExplosionFeePercentCall__Inputs {
  _call: SetExplosionFeePercentCall;

  constructor(call: SetExplosionFeePercentCall) {
    this._call = call;
  }

  get newFee(): i32 {
    return this._call.inputValues[0].value.toI32();
  }
}

export class SetExplosionFeePercentCall__Outputs {
  _call: SetExplosionFeePercentCall;

  constructor(call: SetExplosionFeePercentCall) {
    this._call = call;
  }
}

export class SetIdentityOwnerCall extends ethereum.Call {
  get inputs(): SetIdentityOwnerCall__Inputs {
    return new SetIdentityOwnerCall__Inputs(this);
  }

  get outputs(): SetIdentityOwnerCall__Outputs {
    return new SetIdentityOwnerCall__Outputs(this);
  }
}

export class SetIdentityOwnerCall__Inputs {
  _call: SetIdentityOwnerCall;

  constructor(call: SetIdentityOwnerCall) {
    this._call = call;
  }

  get newIdentityOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetIdentityOwnerCall__Outputs {
  _call: SetIdentityOwnerCall;

  constructor(call: SetIdentityOwnerCall) {
    this._call = call;
  }
}

export class SetTreasuryCall extends ethereum.Call {
  get inputs(): SetTreasuryCall__Inputs {
    return new SetTreasuryCall__Inputs(this);
  }

  get outputs(): SetTreasuryCall__Outputs {
    return new SetTreasuryCall__Outputs(this);
  }
}

export class SetTreasuryCall__Inputs {
  _call: SetTreasuryCall;

  constructor(call: SetTreasuryCall) {
    this._call = call;
  }

  get newTreasury(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetTreasuryCall__Outputs {
  _call: SetTreasuryCall;

  constructor(call: SetTreasuryCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UnRegisterDAppCall extends ethereum.Call {
  get inputs(): UnRegisterDAppCall__Inputs {
    return new UnRegisterDAppCall__Inputs(this);
  }

  get outputs(): UnRegisterDAppCall__Outputs {
    return new UnRegisterDAppCall__Outputs(this);
  }
}

export class UnRegisterDAppCall__Inputs {
  _call: UnRegisterDAppCall;

  constructor(call: UnRegisterDAppCall) {
    this._call = call;
  }
}

export class UnRegisterDAppCall__Outputs {
  _call: UnRegisterDAppCall;

  constructor(call: UnRegisterDAppCall) {
    this._call = call;
  }
}
